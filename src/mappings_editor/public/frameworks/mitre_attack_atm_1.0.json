{
    "frameworkId": "mitre_attack_atm",
    "frameworkVersion": "1.0",
    "categories": {
        "techniques": [
            {
                "id": "ATM.T0010",
                "name": "AFTERMARKET_CUSTOMER_OR_DEALER_EQUIPMENT",
                "description": "Adversaries may take use aftermarket, customer, or dealer equipment as an initial access point into the vehicle. Paired devices, such as a customer's smart phone, often possess valid credentials for the vehicle’s Bluetooth and Wi-Fi networks, access to phone projection technologies, and may be connected to USB ports. Dealer test and diagnostic tools are typically connected to a vehicle's OBD-II port, which may provide direct access to a vehicle network; these tools may also have access to credentials for running diagnostic procedures. Third-party OBD-II accessories, such as insurance dongles and fleet management dongles, may introduce a wireless ingress points to the vehicle through its OBD-II port. These devices may also be used as a post-exploitation command-and-control mechanism, and to exfiltrate data from a vehicle."
            },
            {
                "id": "ATM.T0011",
                "name": "BROWSER_COMPROMISE",
                "description": "Based on MITRE ATT&CK’s ‘Drive-by Compromise’ technique, a browser compromise is when an adversary gains access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is targeted for exploitation. For example, a website may contain malicious media content intended to exploit vulnerabilities in media parsers as demonstrated by the Android Stagefright vulnerability. "
            },
            {
                "id":"ATM.T0012",
                "name":"EXPLOIT_VIA_RADIO_INTERFACE",
                "description": "The vehicle may be targeted for exploitation through its interface to cellular networks or other radio interfaces. Baseband Vulnerability Exploitation. A message sent over a radio interface such as cellular, Bluetooth, GPS, NFC, Wi-Fi[1], TPMS, DAB, or others to the vehicle could exploit a vulnerability[2][3]. Malicious SMS Message. An SMS message could contain content designed to exploit vulnerabilities in the SMS parser on the receiving device[4]. An SMS message could also contain a link to a web site containing malicious content designed to exploit the device web browser. Vulnerable SIM cards may be remotely exploited and reprogrammed via SMS messages[5].This technique was adapted from MITRE ATT&CK."
            },
            {
                "id":"ATM.T0013",
                "name":"EXPLOIT_VIA_REMOVABLE_MEDIA",
                "description":"Adversaries may gain initial access to an automotive environment by copying malware to removable media and taking advantage of Autorun features or automatic parsing of file (e.g., MP3s) when the device is inserted into a system and executes. This may occur through manual manipulation of the media, modification of systems used to initially format the media, or modification to the media's firmware itself. This technique was adapted from MITRE ATT&CK."
            },
            {
                "id":"ATM.T0014",
                "name":"MALCIOUS_APP",
                "description":"Malicious applications could be used by adversaries to gain a presence on a vehicle. Some vehicles are configured to allow application installation only from an authorized app store, and an adversary may seek to place a malicious application in an authorized app store, enabling the application to be installed onto targeted devices. App stores typically require developer registration and use vetting techniques to identify malicious applications, which adversaries may seek to circumvent by downloading new code at runtime or by using obfuscation techniques. Adversaries may also seek to evade vetting by placing code in a malicious application to detect whether it is running in an app analysis environment and, if so, avoid performing malicious actions while under analysis. [1] [2] [3] [4] Adversaries may also use fake identities, payment cards, etc., to create developer accounts to publish malicious applications to app stores. [2] Adversaries may also use control of a target's Google account to use the Google Play Store's remote installation capability to install apps onto the Android devices associated with the Google account. [5] [6] (Only applications that are available for download through the Google Play Store can be remotely installed using this technique.) This ‘Malicious app’ technique also includes installing a malicious application on targeted mobile devices without involving an authorized app store (e.g., Google Play Store or the OEM’s app store). Adversaries may wish to avoid placing malicious applications in an authorized app store due to increased potential risk of detection or other reasons. However, mobile devices often are configured to allow application installation only from an authorized app store which would prevent this technique from working. Delivery methods for the malicious application include spearphishing attachments, spearphishing links, and third party app stores (as opposed to an authorized app store that the device implicitly trusts as part of its default behavior), which may not apply the same level of scrutiny to apps as applied by an authorized app store.[7][8][9] Some Android malware comes with functionality to install additional applications, either automatically or when the adversary instructs it to.[10] Finally, this technique also includes situations where an adversary develops and distributes malware that masquerades as as a legitimate application. This can be done in two different ways: by embedding the malware in a legitimate application, or by pretending to be a legitimate application. Embedding the malware in a legitimate application is done by downloading the application, disassembling it, adding the malicious code, and then re-assembling it.[11] The app would appear to be the original app, but would contain additional malicious functionality. The adversary could then publish the malicious application to app stores or use another delivery method. Pretending to be a legitimate application relies heavily on lack of scrutinization by the user. Typically, a malicious app pretending to be a legitimate one will have many similar details as the legitimate one, such as name, icon, and description.[12] Malicious applications may also masquerade as legitimate applications when requesting access to the accessibility service in order to appear as legitimate to the user, increasing the likelihood that the access will be granted. This technique is a combination of three techniques described in the MITRE ATT&CK matrix for mobile devices: Deliver Malicious App via Authorized App Store, Deliver Malicious App via Other Means, and Masquerade as Legitimate Application."
            },
            {
                "id":"ATM.T0015",
                "name":"PHISHING",
                "description":"From MITRE ATT&CK: Adversaries may send phishing messages to gain access to victim systems. All forms of phishing are electronically delivered social engineering. Phishing can be targeted, known as spearphishing. In spearphishing, a specific individual, company, or industry will be targeted by the adversary. More generally, adversaries can conduct non-targeted phishing, such as in mass malware spam campaigns. Adversaries may send victims emails containing malicious attachments or links, typically to execute malicious code on victim systems. Phishing may also be conducted via third-party services, like social media platforms. Phishing may also involve social engineering techniques, such as posing as a trusted source."
            },
            {
                "id":"ATM.T0016",
                "name":"PHYSICAL_MODIFICATION",
                "description":"The adversary can make physical modifications to the vehicle’s ECUs, wiring harnesses, and can replace ECUs. Some ECUs possess physical debug interfaces that are not exposed outside their enclosures. With sufficient time, an adversary can partially disassemble the vehicle to obtain physical access to these ECUs, remove their enclosures, and connect or solder cables to access these debug interfaces. Direct physical access can also be used by an adversary to attempt different types of glitching attacks, side channel attacks, memory removal, reprogramming, and replacement, as well as others. To gain access to a vehicle an adversary could replace an ECU with one they have modified ahead of time (e.g., a modified service or junkyard part)."
            },
            {
                "id":"ATM.T0017",
                "name":"SUPPLY_CHAIN_COMPROMISE",
                "description":"Adversaries may manipulate products or product delivery mechanisms prior to receipt by a final consumer for the purpose of data or system compromise. Supply chain compromise can take place at any stage of the supply chain including: Manipulation of development tools Manipulation of a development environment Manipulation of source code repositories (public or private) Manipulation of source code in open-source dependencies Manipulation of software update/distribution mechanisms Compromised/infected system images (multiple cases of removable media infected at the factory) Replacement of legitimate software with modified versions Sales of modified/counterfeit products to legitimate distributors Shipment interdiction While supply chain compromise can impact any component of hardware or software, attackers looking to gain execution have often focused on malicious additions to legitimate software in software distribution or update channels.  Targeting may be specific to a desired victim set  or malicious software may be distributed to a broad set of consumers but only move on to additional tactics on specific victims.  Popular open source projects that are used as dependencies in many applications may also be targeted as a means to add malicious code to users of the dependency. This technique was adapted from MITRE ATT&CK."
            }
        ]
    }
}
